#!/bin/bash

COLOR="#e4e7ff"
MUTED_COLOR="#a0a0a0"

get_default_sink() {
    DEFAULT_SINK=$(pactl info | grep "Default Sink" | cut -d ' ' -f3)
    DEFAULT_SINK_INDEX=$(pactl list short sinks | grep $DEFAULT_SINK | cut -f1)
}

change_to_next_sink() {
    get_default_sink
    sinks=($(pactl list short sinks | cut -f1))
    
    # Iterate over sinks array
    for ((i=0; i<${#sinks[@]}; i++)); do
        # Check if current element matches the default sink
        if [[ ${sinks[i]} == $DEFAULT_SINK_INDEX ]]; then
            # Check if there is a next element
            if (( i+1 < ${#sinks[@]} )); then
                next_sink=${sinks[i+1]}
            # Else we select the previous element
            else
                next_sink=${sinks[i-1]}
            fi
            break
        fi
    done

    pactl set-default-sink $next_sink
}

case "$BLOCK_BUTTON" in
    1) change_to_next_sink ;;
    2) pactl set-sink-mute @DEFAULT_SINK@ toggle ;;
    3) i3-sensible-terminal -e alsamixer ;;
    4) pactl set-sink-volume @DEFAULT_SINK@ +2% ;;
    5) pactl set-sink-volume @DEFAULT_SINK@ -2% ;;
esac

get_default_sink

OUTPUT_INFO=$(pactl list sinks | grep $DEFAULT_SINK -A 8 | grep "Volume: \(front-left\)\|Mute" )
for name in MUTED VOLUME; do
    read $name
done < <(echo "$OUTPUT_INFO")

VOLUME=$(echo "$VOLUME" | grep -o "[0-9]*%" | head -1)

if [[ $DEFAULT_SINK == *"pci"* ]]; then
    SINK_ICON="󰓃"
else
    SINK_ICON="󰋋"
fi

if [[ $MUTED == *"yes"* ]]; then
    echo "󰝟 MUTE"
    echo "󰝟"
    echo $MUTED_COLOR
else
    echo "$SINK_ICON $VOLUME"
    echo "$VOLUME"
    echo $COLOR
fi

