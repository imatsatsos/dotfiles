#!/bin/sh

# Example for $XDG_CONFIG_HOME/nsxiv/exec/key-handler
# Called by nsxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon: all marked images, if in thumbnail mode and at least one
# image has been marked, otherwise the current image. nsxiv(1) will block until
# the handler terminates. It then checks which images have been modified and
# reloads them.

# By default nsxiv(1) will send one image per-line to stdin, however when using
# -0 the image list will be NULL separated and the environment variable
# "$NSXIV_USING_NULL" will be set to 1.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.
# If KEY has an uppercase equivalent, S-KEY is resolved into it. For instance,
# K replaces S-k and Scedilla replaces S-scedilla, but S-Delete is sent as-is.

print_help() {
printf %s "\
c  copy image
y  copy path
d  send to trash
w  set as wallpaper
g  edit in gimp
,  rotate +90
.  rotate -90
/  mirror horizontally
m  metadata
h  help
"
}

rotate() {
	degree="$1"
	tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read file; do
		case "$1" in
		"flop") convert -flop "$file" "$file" ;;
		*) convert -rotate "$degree" "$file" "$file" ;;
		esac
	done
}

case "$1" in
"y")      xclip -in -filter | tr '\n' ' ' | xclip -in -selection clipboard ;;
"c")      while read file; do 
              xclip -selection clipboard -target image/png "$file" && \
		      notify-send "$file copied to clipboard"
            done ;;
#"C-m")      while read file; do st -t termfloat -e sh -c "exiv2 pr -q -pa '$file' | less" & done ;;
"m")      while read file; do notify-send "$file" "$(exiv2 pr -q -pa \"$(realpath \"$file\")\")" & done ;;
"g")      while read file; do setsid -f gimp "$file" & done ;;
"d")	  while read file; do mv "$file" $XDG_DATA_HOME/Trash/files ; done ;;
"comma")  rotate -90 ;;
"period") rotate  90 ;;
"slash")  rotate flop ;;
"w")      while read file; do setwall "$file" && notify-send "$file set as wallpaper!" ; done ;;
"h")	  notify-send "Key handler:" "$(print_help)"
esac

