#!/usr/bin/env bash
# Outputs connected wifi state, signal % and SSID
# output is color graded
# Left click: toggle SSID output
# Right click: opens nmcli to manage connections
# Middle click: toggles wifi state
# DEPENDS: iw to display info, NetworkManager for connection handling

. /home/john/.local/bin/status/sbcol

if [ -z "$INTERFACE" ] ; then
    INTERFACE="${BLOCK_INSTANCE:-wlp0s20f3}"
fi

COLOR_GE80=${COLOR_GE80:-#78DCA7}
COLOR_GE60=${COLOR_GE60:-#FCF39C}
COLOR_GE40=${COLOR_GE40:-#DBC074}
COLOR_LOWR=${COLOR_LOWR:-#D95177}
COLOR_DOWN=${COLOR_DOWN:-#D95177}
LABEL="󰖩"

# As per #36 -- It is transparent: e.g. if the machine has no battery or wireless
# connection (think desktop), the corresponding block should not be displayed.
[ ! -d /sys/class/net/"$INTERFACE"/wireless ] && exit

toggle_wifi() {
	if [ "$(cat /sys/class/net/"$INTERFACE"/operstate)" = 'down' ]; then
		nmcli device up	"$INTERFACE" >/dev/null 2>&1
    else
        nmcli device down "$INTERFACE" >/dev/null 2>&1
    fi
}

case "$BLOCK_BUTTON" in
    2) toggle_wifi ;;
    3) setsid -f "$TERMINAL" -T termfloat -e nmtui ;;
esac

# If the wifi interface exists but no connection is active, "down" shall be displayed.
if [ "$(cat /sys/class/net/"$INTERFACE"/operstate)" = 'down' ]; then
    display "down" "$COLOR_DOWN" "󰖪"
    exit
fi


SSID=$(iw "$INTERFACE" link | awk '/SSID: / {$1=""; print $0}')
#SSID=$(iw "$INTERFACE" info | awk '/ssid / {$1=""; print $0}')
SHORT_SSID="*${SSID: -3}"
QUALITY=$(iw "${INTERFACE}" link | grep 'dBm$' | grep -Eoe '-[0-9]{2}' | awk '{print  ($1 > -50 ? 100 :($1 < -100 ? 0 : ($1+100)*2))}')
QUALITYdBm=$(iw "${INTERFACE}" link | grep dBm | grep -Eoe '-[0-9]{2} dBm')

# color
if [ "$QUALITY" -ge 80 ]; then 
    test=''
elif [ "$QUALITY" -ge 60 ]; then
    COLOR=$COLOR_GE60
elif [ "$QUALITY" -ge 40 ]; then
    COLOR=$COLOR_GE40
else
    COLOR=$COLOR_LOWR
fi

OUTPUT="$QUALITY"

case "$BLOCK_BUTTON" in
    1) OUTPUT="$SSID" ;;
esac

# if [ -n "$border" ]; then
#     LABEL="<span color=\"$border\">$LABEL</span>"
# fi
#
# echo "$LABEL  <span color=\"$COLOR\">$OUTPUT</span>"
display "$OUTPUT" "$COLOR"
