#!/usr/bin/env bash

[ -e "$HOME/.local/bin/status/sbcol" ] && . "$HOME"/.local/bin/status/sbcol

# Use the provided interface, otherwise the device used for the default route.
IF="${IFACE:-$BLOCK_INSTANCE}"
#IF="${IF:-$(ip route | awk '/^default/ { print $5 ; exit }')}"
for dev in /sys/class/net/e*/; do
    name=$(basename $dev)
    IF="${IF:-$(basename "$name")}"
done

# Exit if there is no default route
[[ -z "$IF" ]] && exit

#------------------------------------------------------------------------

# As per #36 -- It is transparent: e.g. if the machine has no battery or wireless
# connection (think desktop), the corresponding block should not be displayed.
[[ ! -d /sys/class/net/${IF} ]] && exit
#------------------------------------------------------------------------
AF=${ADDRESS_FAMILY:-inet6?}
LABEL="${LABEL:-ó°Œ—}"

for flag in "$1" "$2"; do
  case "$flag" in
    -4)
      AF=inet ;;
    -6)
      AF=inet6 ;;
    -L)
      if [[ "$IF" = "" ]]; then
        LABEL="iface"
      else
        LABEL="$IF:"
      fi ;;
  esac
done

if [[ "$IF" = "" ]] || [[ "$(cat /sys/class/net/$IF/operstate)" = 'down' ]]; then
  display "down" "#d95177" || echo "${label}down"
  exit 0
fi

#------------------------------------------------------------------------
# if no interface is found, use the first device with a global scope
IPADDR=$(ip addr show $IF | perl -n -e "/$AF ([^ \/]+).* scope global/ && print \$1 and exit")

case $BLOCK_BUTTON in
    1)
        display "$ipaddr" || echo "${label}${IPADDR}"
        exit 0
        ;;
    3) echo -n "$IPADDR" | xclip -q -sel c ;;
esac

if [[ "${display_wifi_name}" == "1" ]]; then
    # try to guess the wifi name
    WIFI_NAME=$(iw $IF info | grep -Po '(?<=ssid ).*' | tr -d " \t\n\r")

    if [[ $BLOCK_BUTTON -eq 1 ]];
    then
        message="$LABEL $WIFI_NAME ($IPADDR)"
    else
        message="$LABEL $WIFI_NAME"
    fi
else
    message="$LABEL$IPADDR"
fi
#------------------------------------------------------------------------

display "up" "$color" || echo "${label}up"
