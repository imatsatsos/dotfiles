#!/bin/bash
# Outputs current default output sink, volume, mute state
# Left-click: change output sink
# Right-click: open alsamixer
# Middle-click: toggle mute
# Mousewheel: change volume
# DEPENDS: pactl, alsamixer

# export this as env variable in .shellrc
#TERMINAL=i3-sensible-terminal
MUTE_COLOR="#a0a0a0"
BOOST_COLOR="#ff4331"

get_default_sink() {
    DEFAULT_SINK=$(pactl info | grep "Default Sink" | cut -d ' ' -f3)
    DEFAULT_SINK_INDEX=$(pactl list short sinks | grep "$DEFAULT_SINK" | cut -f1)
}

change_sink() {
    get_default_sink
    sinks=($(pactl list short sinks | cut -f1))
    
    if [ "${#sinks[@]}" -gt 1 ]; then
      setsid -f dr_sinkswitch &
      return
    fi

    # if sinks[0] is the current default, then change it to the next. else next will be sinks[0]
    [ "${sinks[0]}" == "$DEFAULT_SINK_INDEX" ] && next_sink=${sinks[1]} || next_sink=${sinks[0]}
    
    pactl set-default-sink "$next_sink"
}

get_mic_state() {
  micstate=$(wpctl get-volume @DEFAULT_SOURCE@ | grep -q 'MUTED' && echo "MUTED" || echo "")
  if [ "$micstate" = "MUTED" ]; then
    ICON="<span fgcolor='$BOOST_COLOR'>󰍭</span> "
  else
    ICON=""
  fi
}

case "$BLOCK_BUTTON" in
    1) change_sink ;;
    2) volume_control mute ;;
    3) setsid -f "$TERMINAL" -T termfloat -e alsamixer ;;
    4) pactl set-sink-volume @DEFAULT_SINK@ +1% ;;
    5) pactl set-sink-volume @DEFAULT_SINK@ -1% ;;
esac

get_default_sink

OUTPUT_INFO=$(pactl list sinks | grep "$DEFAULT_SINK" -A 8 | grep "Volume: \(front-left\)\|Mute" )
for name in MUTED VOLUME; do
    read $name
done < <(echo "$OUTPUT_INFO")

VOLUME=$(echo "$VOLUME" | grep -o "[0-9]*%" | head -1)

get_mic_state

if [[ "$MUTED" == *"yes"* ]]; then
  [[ "$DEFAULT_SINK" == *"Jack"* ]] && ICON="$ICON󰟎" || ICON="$ICON󰝟"
else
  [[ "$DEFAULT_SINK" == *"Jack"* ]] && ICON="$ICON󰋋" || ICON="$ICON󰕾"
fi

if [ -n "$border" ]; then
    ICON="<span color=\"$border\">$ICON</span>"
fi

. /home/john/.local/bin/status/sbcol
if [[ "$MUTED" == *"yes"* ]]; then
#    echo "$ICON<span color=\"$MUTE_COLOR\">  M</span>"
display "MUTE" "$MUTE_COLOR"
elif [ "${VOLUME%%%}" -ge 101 ]; then
#    echo "<span color=\"$BOOST_COLOR\">$ICON ${VOLUME%%%}</span>"
display "OVER" "$BOOST_COLOR"
else
    #echo "$ICON ${VOLUME%%%}"
    vol=${VOLUME%%%}
    display "$vol"
fi
