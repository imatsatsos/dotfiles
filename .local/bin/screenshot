#!/bin/env sh
# Script is a screenshot wrapper for maim
# Take a screenshot of screen, active window, selection
# If "menu" is passed as $1, then a rofi menu opens to select the screenshot function
# Image is saved in Pictures/Screenshots and copied to clipboard
# DEPENDS: maim xdotool xclip dunst

save_path="$HOME/Pictures/Screenshots"
name="$(date +%s).png"

fullscreen="󰹑"
window=""
selection="󰒉"

if [ "$1" = menu ]; then
	[ -e "$HOME"/.local/bin/menus.conf ] && . "$HOME"/.local/bin/menus.conf
	menu=${menu:-dmenu}
	case $menu in
	"rofi")
		choice=$(printf "%s\n%s\n%s" "$fullscreen" "$window" "$selection" | rofi -dmenu -mesg "Screenshot" \
		-theme-str "listview {columns: 1; lines: 3;}" \
		-theme "$HOME"/.config/rofi/theme_screenshot.rasi ) 
	;;
	*)
		fullscreen="󰹑  Fullscreen"
		window="  Window"
		selection="󰒉  Selection"
		choice=$(printf "%s\n%s\n%s" "$fullscreen" "$window" "$selection" | dmenu -p "Screenshot:" $dmenu_args)
	;;
	esac
fi

choice=${choice:-$1}
case $choice in
    fullscreen|"$fullscreen") args=" " ;;

    selection|"$selection") args="-s -b 2 -c 0.35,0.55,0.85,0.75" ;;
    
    window|"$window") args="-i $(xdotool getactivewindow)" ;;

    *) echo "arg required: menu, fullscreen, selection, window"; exit 1 ;;
esac

[ ! -d "$save_path" ] && mkdir -p "$save_path"
maim --delay=1 -u --quiet $args | tee "$save_path/$name" | xclip -selection clipboard -t 'image/png'

[ -f "$save_path/$name" ] || exit 1

dunstify -a "Screenshot" \
    "Screenshot captured:" \
    "<i>$name</i>" \
    -t 3000 \
    -i "$save_path/$name"

paplay /usr/share/sounds/freedesktop/stereo/screen-capture.oga || exit 0
